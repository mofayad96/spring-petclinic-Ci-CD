version: "3"
services:
  db:
    image: postgres:17.5
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    ports:
    - "5432:5432"
    volumes:
      - sonardb_data1:/var/lib/postgresql/data
    networks:
      - services

  sonarqube:
    image: sonarqube:latest
    depends_on:
      - db
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    networks:
      - services

  nexus:
    image: sonatype/nexus3 
    ports:
      - "8081:8081" # for nexus UI
      - "8082:8082" # for nexus communication port
    volumes:
      - nexus_data:/nexus-data
    networks:
      - services


  jenkins:
    build:
      context: .
      dockerfile: Dockerfile.jenkins1
    container_name: jenkins-controller
    user: root
    privileged: true   # allow Docker access
    ports:
      - "9080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
    environment:
      DOCKER_HOST: tcp://docker:2375   # point Jenkins to DinD
    depends_on:
      - docker
    networks:
      - services



  



  docker:
    image: docker:20.10-dind
    container_name: dind
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=   #  disable TLS so 2375 is plain HTTP
    command: ["--host=tcp://0.0.0.0:2375", "--storage-driver=overlay2"]
    volumes:
      - docker-data:/var/lib/docker
    networks:
      - services

  grafana :
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - services
  
  promethues:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - services 

volumes:
  sonardb_data1:
  nexus_data:
  jenkins_home:
  docker-data:
networks:
  services:
    driver: bridge

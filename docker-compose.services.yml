version: "3"
services:
  db:
    image: postgres:17.5
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    ports:
    - "5432:5432"
    volumes:
      - sonardb_data:/var/lib/postgresql/data
    networks:
      - sonarnet

  sonarqube:
    image: sonarqube:latest
    depends_on:
      - db
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    networks:
      - sonarnet

  nexus:
    image: sonatype/nexus3 
    ports:
      - "8081:8081" # for nexus UI
      - "8082:8082" # for nexus communication port
    volumes:
      - nexus_data:/nexus-data

  promethues:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring 
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins-controller
    user: root #to give to jenkins permission to talk to docker through socket
    ports:
      - "9080:8080"   # Jenkins UI
      - "50000:50000" # Agent communication port
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock   #  give controller access to Docker
    networks:
      - jenkins-net

  grafana :
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring
  

volumes:
  sonardb_data:
  nexus_data:
  jenkins_home:
networks:
  sonarnet:
    driver: bridge
  monitoring:
    driver: bridge
  jenkins-net:
    driver: bridge
